#!/bin/bash

trap "echo Exited!; exit 1;" SIGINT SIGTERM

BIN_DIR=$( cd "$( dirname "$0" )" && pwd )

pushd $BIN_DIR/../src/github.com/coreos/etcd
./build
popd

mv $BIN_DIR/../src/github.com/coreos/etcd/bin/etcd $BIN_DIR/etcd

export PATH=$PATH:$BIN_DIR

rm -rf ./pkg

result=0

function green {
    echo -e "$(tput setaf 2)$1$(tput sgr0)"
}

function red {
    echo -e "$(tput setaf 1)$1$(tput sgr0)"
}

packages=(
    deaagent
    loggregator
    trafficcontroller
    github.com/cloudfoundry/loggregatorlib
)

performance_tests=(
    github.com/cloudfoundry/loggregatorlib/emitter/emitter_performance
)

for package in "${packages[@]}"
do
    local_result=$result
    echo -e "\n Testing $package"
    go fmt $package/...
    go test -v -race $package/...
    let "result += $?"
    echo "Current result: $result"
    echo -e "\n Vetting $package"
    go vet $package/...
    let "result += $?"
    echo "Current result: $result"
    if [ $result -gt $local_result ]; then
        red " Package $package FAILED"
    else
        green " Package $package PASSED"
    fi
done

for package in "${performance_tests[@]}"
do
    local_result=$result
    echo -e "\n Testing $package"
    go fmt $package/...
    go test -i $package/...
    go test -v $package/...
    let "result += $?"
    echo -e "\n Vetting $package"
    go vet $package/...
    let "result += $?"
    if [ $result -gt $local_result ]; then
        red " Package $package FAILED"
    else
        green " Package $package PASSED"
    fi
done

if [ $result -eq 0 ]; then
	green "\nSUITE SUCCESS"
else
	red "\nSUITE FAILURE"
fi

exit $result

