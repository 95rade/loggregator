#!/bin/bash

trap "echo Exited!; exit 1;" SIGINT SIGTERM

BIN_DIR=$( cd "$( dirname "$0" )" && pwd )

pushd $BIN_DIR/../src/github.com/coreos/etcd
./build
popd

mv $BIN_DIR/../src/github.com/coreos/etcd/bin/etcd $BIN_DIR/etcd

export PATH=$PATH:$BIN_DIR
export GORACE="halt_on_error=1"

goveralls=$(which goveralls)
if [[ -e "${BIN_DIR}/goveralls" ]]
then
    goveralls="${BIN_DIR}/goveralls"
fi

rm -rf ./pkg

result=0

function green {
    if [[ -n "$TERM" ]]; then
        echo -e "$(tput setaf 2)$1$(tput sgr0)"
    else
        echo ":) $1"
    fi
}

function red {
    if [[ -n "$TERM" ]]; then
        echo -e "$(tput setaf 1)$1$(tput sgr0)"
    else
        echo ":( $1"
    fi
}

function bold_blue {
    if [[ -n "$TERM" ]]; then
        echo -e "$(tput setaf 6; tput bold)$1$(tput sgr0)"
    else
        echo "$1"
    fi
}

not_unit_tests="github.com,golang.org,integration_tests,lats"

bold_blue "==================================  Running Unit Tests  =================================="
ginkgo -r --race --randomizeAllSpecs --cover --skipPackage="${not_unit_tests}" $1 src
result=$?

echo
bold_blue "==================================  Running Integration Tests  =================================="
ginkgo -r --race --randomizeAllSpecs --cover -skipPackage="integration_tests/statsd-injector" $1 src/integration_tests
result=$((result + $?))

fmtable_dirs=$(ls -1 src | grep -v "github.com")

for dir in "${fmtable_dirs}"
do
    if go list $dir > /dev/null 2>&1
    then
        echo -e "\n Fmting $package"
        go fmt $dir/...
        echo -e "\n Vetting $package"
        go vet $dir/...
        result=$((result + $?))
        echo -e "\n Checking that $package compiles"
        go install $dir
    fi
done

if [ $result -eq 0 ]; then
    green "\nSUITE SUCCESS"
    if [[ ! -z "$goveralls" && ! -z "$COVERALLS_TOKEN" ]]
    then
        green "\nWriting cover profile to coveralls.io"
        echo "mode: set" > all.coverprofile
        find . -iname "*.coverprofile" -exec grep -v mode: {} >> all.coverprofile \;
        $goveralls -coverprofile=all.coverprofile -repotoken=$COVERALLS_TOKEN -service=concourse
    fi
else
    red "\nSUITE FAILURE"
fi

exit $result
