// Code generated by go-bindata.
// sources:
// loggregator-certs/doppler.crt
// loggregator-certs/doppler.csr
// loggregator-certs/doppler.key
// loggregator-certs/loggregator-ca.crl
// loggregator-certs/loggregator-ca.crt
// loggregator-certs/loggregator-ca.key
// loggregator-certs/metron.crt
// loggregator-certs/metron.csr
// loggregator-certs/metron.key
// loggregator-certs/statsdinjector.crt
// loggregator-certs/statsdinjector.csr
// loggregator-certs/statsdinjector.key
// loggregator-certs/syslogdrainbinder.crt
// loggregator-certs/syslogdrainbinder.csr
// loggregator-certs/syslogdrainbinder.key
// loggregator-certs/trafficcontroller.crt
// loggregator-certs/trafficcontroller.csr
// loggregator-certs/trafficcontroller.key
// DO NOT EDIT!

package testservers

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dopplerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJjCCAg6gAwIBAgIRAKzYe4osS0a4CM86ryfU+pQwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xNzAyMDkxNzQzNDlaFw0xOTAy
MDkxNzQzNDlaMBIxEDAOBgNVBAMTB2RvcHBsZXIwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQCwKnlDVLNdfyadXoK8lb1Prv6ruI2guvhiTZlxFKz2Rw81
Pw2Sa0FWbeJTLQUMbsqoqPOvmWjRjoG3JxCK7crvBOMaiyzk0BZlTskNL/8JKAnZ
Aqdq+GmnTZ/ewvJvBcTDxSCnexnyahz0l1IwXbizRa4z0wPSmF4LWYr6kw65Efid
/NSXBerNsW0wr/YbGK4cokEjbkpjEi4bi0sYDWcl98+OIBYLAyY1Es5A9gMFgQgC
DRdN1KeYaY/4tzzuMYjDJ9TZqEZeYEeuZhWxjTR4dJyNnh0yeCS9waUhZBLzwDs2
toisyEISbjwZ+t9Za8E2a5YJgtWvf+aDkZs01yVrAgMBAAGjcTBvMA4GA1UdDwEB
/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHQYDVR0OBBYE
FBmYnIDui/aeVSJN/B8aqO8KI1snMB8GA1UdIwQYMBaAFEnJo0c/2jLqySFv23hf
FjYRRZDxMA0GCSqGSIb3DQEBCwUAA4ICAQBnH0ltFl9xMrJynwEWjxRYvFr0kdX3
U7KuUhW6C5jjTnY0UCOkG5Hc6qozNWHen0iRAI5sQSzoDMS4cIEv2bI8ERcTk70L
/xS5UzsZmWTgGIfKzck7E5jvY8A4llKCHulufqkQAzG2b+uxiY2NKbErGMOCfart
eGywIOxR7KuwTKM03uMO94WGG3HCLlFyEo4OIO1x/QAmOugKKgzRTZXa/BChS3XL
vl8/1xa531N5YIzQTef+q87Hrf8mtOzeAgz0ka8lNYFjxGJutkn3S8/mIPmLfASf
pyq25yfkJq6U4edFNrstInXo2LGVa9Wh4D6csICJPFM0UMZFIYqqXHxv0srWZ0LO
gJU3E1xAohKmL1VOKjX49M4RriswWrCpjmADXSsAF49ggtslWz1Iuaj5HgvtofNr
6/ku86yADvXrr01GXWvsC9VfYBWdaf8dszmVSt/nn7PIPNxRf9l31TRk/fgDEwBx
A0CV2WpZJe14wuzEB0eiVz8TNo3rp4LDewoCOYr47bQZB7D9rL43c9eJxxTgSRzf
bdurrCXteqSyrms/jrnp34a5ClfTo8M27UR+Kia/eEdRoOOdNSsCi9DLFUCk/Nea
1+2JIl/GJaqiA6RfZW4DKVB1IhR/t+fPTOEdwy9EHThg5mxIfnMcS90d6KLtVjhX
EH4zWKJ8csRjaA==
-----END CERTIFICATE-----
`)

func dopplerCrtBytes() ([]byte, error) {
	return _dopplerCrt, nil
}

func dopplerCrt() (*asset, error) {
	bytes, err := dopplerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.crt", size: 1501, mode: os.FileMode(292), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALAqeUNUs11/Jp1egryVvU+u/qu4jaC6+GJNmXEUrPZH
DzU/DZJrQVZt4lMtBQxuyqio86+ZaNGOgbcnEIrtyu8E4xqLLOTQFmVOyQ0v/wko
CdkCp2r4aadNn97C8m8FxMPFIKd7GfJqHPSXUjBduLNFrjPTA9KYXgtZivqTDrkR
+J381JcF6s2xbTCv9hsYrhyiQSNuSmMSLhuLSxgNZyX3z44gFgsDJjUSzkD2AwWB
CAINF03Up5hpj/i3PO4xiMMn1NmoRl5gR65mFbGNNHh0nI2eHTJ4JL3BpSFkEvPA
Oza2iKzIQhJuPBn631lrwTZrlgmC1a9/5oORmzTXJWsCAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQCaI6UD1fUFoer0/F8vcUbFFLX6KO3bVoTCmyOQQcwZkD7wC8i9
3uHvrF1cAsgRWsORTS5pPflKp8HQx/ORqBaV8iF0wCZavdrYHwecTtrNs3+YiVCu
MJXIXbl9Lj8x1ziSI52/m2EtlH60Sm21aadvn58U5cjZlpyV4tPyO1cOwY/s30jc
7Q2OL9eVCk/tmINTYf0h2JSXsk+HFBh4bZel05+q1QzT/KQJH8qTcLhbN/EE4t4Y
jifkAD7zS28Qir7zsz0WK8OjwxylBdYJ23qW87naYK0q+FQa1ix3ruc4dGMu5AjL
5B727QLYo37+RSOVYmE6dDWZ9nAwLvdRP7s0
-----END CERTIFICATE REQUEST-----
`)

func dopplerCsrBytes() ([]byte, error) {
	return _dopplerCsr, nil
}

func dopplerCsr() (*asset, error) {
	bytes, err := dopplerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAsCp5Q1SzXX8mnV6CvJW9T67+q7iNoLr4Yk2ZcRSs9kcPNT8N
kmtBVm3iUy0FDG7KqKjzr5lo0Y6BtycQiu3K7wTjGoss5NAWZU7JDS//CSgJ2QKn
avhpp02f3sLybwXEw8Ugp3sZ8moc9JdSMF24s0WuM9MD0pheC1mK+pMOuRH4nfzU
lwXqzbFtMK/2GxiuHKJBI25KYxIuG4tLGA1nJffPjiAWCwMmNRLOQPYDBYEIAg0X
TdSnmGmP+Lc87jGIwyfU2ahGXmBHrmYVsY00eHScjZ4dMngkvcGlIWQS88A7NraI
rMhCEm48GfrfWWvBNmuWCYLVr3/mg5GbNNclawIDAQABAoIBAEI7BbIRowmQpzTc
9mvuI+lUUjy/Osfl40IaCIkiC9DfcFFFblXQ6xSSZVd+AnrlIF3+fvdSxryaRhxU
nHyO4A+yl6tADdXMgc7+qsnBdLG9ks46mDS4Rgh3P5ahVkH1Oj+b2iX9OwkPaelv
BqBWa/1CQjcLq1E+pYTA2mZQaWWcQwJSIj+hAXp4EvnS1eLWOIP40KSaiYP/aW0y
XLBikOFsW+UT0D8cQ0keUKpCXPI9/zuR3o4ZcjitJGgbjmhvJ7/vS9ztGvZnp+sL
r+eVxnOQf7IKisytOjv9AhBkYqrO+GfBQpOrIZmG+EVS68UmxpndPcmNilJN4i6y
exV5c5ECgYEAxrNDsLBehNI57dy9vpIKiKwnoRDW5GF2JtQtLV4I1277ovi8jkjx
DzkAd2LaGsyeYnMfEXipz08j6sJdL5Sk+kkJVYB2zjA+SnlK4mKnOuzGoTBo7F7y
EL6sbPc0yap9qsOXF+ASFKXmOypAzJGj7M9akE7Qu+LTCMg/0MYuGcMCgYEA4vel
nIgfbENpegJgQBmkT0nVxUkN1/Vm5liwpTRziNjapGhB7PKI7UZtRm9cgpyerjpl
OfBjpNK3z2dUrNY+joHb9jfsuEK4KctPBBp75GX8L1mm4/gLX20BxMoqbvqsb7v9
2KDDy8WGv6HMs6NbnBT8pAiwtbbFXFwBPTYfYzkCgYBV5jGhNN3ntaptdjxhImmD
ZElNjCYaXTfi2V8eecSAve3zKmz5ZfcwiYf2FLoNU+A012fa+bsPcDsqxhPa+fvI
Z8KtP/gccya6s2z4KYX6J1pHXNI/PVyQeJ26DbS4agghxqSPIcMvQfkiIsYYqe2f
9pRERo5ea1SoO0m7S7GqWQKBgEALe4sBCkTlfNT16K0Nz0SkZBMIe0SONdwX+LiV
ZWifMIsl9Dxlb+fscJdogyVEBq7JQZko0SVIZJ+827Ltvbc+w4/l1gFkqkz41rIk
uwMHGDNQS/yWGLdzrgUWuwSX7aKV3JqNOtK8STq38GhcV1Riw6uR3DNagLSALcVV
CWRZAoGAeUHtkhtNHJh2yKeEO3luX9jIUFbJpMugYstFoAkHZT7iRj9eNkzjhfyz
1o7L4cQCjgezR60SDrzZlPpQFHWeCN9CHpqJSDb4x0U2PdADNWUGucYndzBOJKFY
9IiyS5iZcUoOJkOwPf3bIS3m3pw3X3yvzKpbnKiZmtTUiRD38qE=
-----END RSA PRIVATE KEY-----
`)

func dopplerKeyBytes() ([]byte, error) {
	return _dopplerKey, nil
}

func dopplerKey() (*asset, error) {
	bytes, err := dopplerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE3MDIwOTE3NDM0OVoXDTI3MDIwOTE3NDM0OVowAKAjMCEwHwYDVR0jBBgw
FoAUScmjRz/aMurJIW/beF8WNhFFkPEwDQYJKoZIhvcNAQELBQADggIBAI2CTeQn
66zWz2L33fuT3/dDCR3GfZY3WvhLb56yWNEhMRZ6flfZzs+0V0ECDqnj+vMm7bPP
YNQytZmFfU451TyvWXvL/Ar2IcJe/+44Ur0c05ySq7dy/cpaP8B2Dd2VYLl2BspX
/dWf55HadNo6FSrxlKivZSLNn++IUxB2UmdEHfCXVmTFtycOhJ2mOKprylNzeUiq
sV/sRF07fZtDgUutq4nE+A+8xFM4xbVZqYt6E8kk3cSLn/h3Qv6kxrSdupyoJAmg
m9NDrd+fiVxeOTiogWIa5QJ+LXcnE2RfwsG2ctSNJs58BSnLM46OTv4/BiihXk8c
1cCA975LlKQiGTtJ2tsV5RTlZzK0RjSNwNglw8zQjNrxTalMHfotYLnTKnxAu46u
ODn7ty8EzVW83E9ThJOnmCZYyH5exhVTSreo6WVBg1mFAjYfMba5PjiKtfir+hdJ
aLtDErKMovTfLu9Zfpfz32YLMXvbDQ4KOvaSPjQlllagLGaHFy2cVz7RDVjCHvPN
D1CQ9nJqDOpwKnhb3robYEEaLEhZ+V0h6hn59VqBUi6nPBfILd+9oaDllBoazCfq
nEOuZDX3nGsbF3APzbyyXHzbHZJAcF6dKWmqSCJZymDgIJ5kZeQrqftsZ115XNPx
qAVrLJ0nN/WagIKOIzjJTK9iF/+wZhgfOzpP
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE3MDIwOTE3NDM0OFoXDTI3MDIwOTE3NDM0OVowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAMk9+cyAlvsXySlGHPC9HzeAYGmpS9wgllMN7HNkJs6jMrwMBVo1ghEFCcIk
16kdVuK4CN+o27ShybShJ1P1L3NDgq6zjmeurhxAHVrqZOQSPwulrJ4W7rwHSh5A
OnF5FfLZkmFa9aUQK57ARqqn2ZLulnCbkphTVMy3q136ANPkjXyUpXHSUzM4gQb3
9lFmnjxb8u1Z8OYEVZ3stCThM55wBNDscXwasNCxnYvKE5BWFZMQi35oV6vLj8Rt
5pWtAG7VtSVL9Ls3yQ4bobWbUUhPFXztXJtomAi6a+XVCm4a+Y4zjCqsao2MG8XX
cmIEVpk8fcwtX5/QyO6zJZwQTUVLkTGl+mLSIic2T8xT/1aJSfJ9YB8jNM7whcfG
CtmckGYsJc6yhd+0jSZalsdEnME9Wkl4/leAU6Kws63kY4NJ+yC7bA9Mh7Y901d7
a+rVBr6UCjOuwpMdt6Z3IePIN+F/WtnOW00taD1t6rzKY2b/IJT1dCNTRb7Tqrzd
6iVimVmLKIOV9BvgD2Hh4w3chkaW5AzMnLMa3k1LjxlF7XsLg/b2V58o6h/Ia8WZ
xezsj1SZUgAgmadV7PahQsnaD/SJ1r25aLk4s8MDDTGdW4fZRLIN0m2KBIei+SYn
nfFBcR3gFyHarVtRAwiZa/0yxonFjRew1S+iTa0sgLbCX+P/AgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRJyaNH
P9oy6skhb9t4XxY2EUWQ8TANBgkqhkiG9w0BAQsFAAOCAgEALSTyonjNUZFovIHM
XPAOLQbOOY/+8cWe8+P9WWkFS4pOQ50Vx3wDsunLaVG/aiwJOEgWIRLJ5+4Tpkyp
nqb3ivgQcKziJDvuXUySAqxMiIHMC6OjvwaJPUq5sibCiuoVbwfD8xOnPZS3Jv+F
K+3V4Dmu1IGyWva6GhQjD5NIyDVLk8wxNGp7EISB2Dgn151tYQwZ1KQgluLFRwOj
+6OCTZdu/axtS72xvEX7byVX35H+g5AfuegM/+6x5nw6yhVEY2DwYDml8r6JlwKm
95cTShfVrz4fNuG/DCsF2B9sfiK0333mlfpSnx//yFKjMWjmSDXNEsjxx7a3nFmm
OKoAjlUlZ/ZAX77a9ZWqCRX1CUXdahFcHzfgCVmymIppgS4mrQ2MMhUrwEnvmeI9
FbRBYsqbKlo+URk4etqcNkDGLHBYVCzwH+e3TJMWA9V74W4MKfi7A+RpvV1eP25b
pV/RjmA07ZgK6szkbesY1dxLgILzS2WV9Aa5l5KfzFlfgmrNwc5DNtUbQK5l3w1E
E2cZEfKrP84AROWt8OyL1BvQshvB1WY0DazoHC8rZ6NaDDY3t7MLo+FF3krHLC1m
li/o6p5fnAjRN9h0KG2BOdkAzkYO+7qr3BDX9LS6Wglr4yqXleDIJa8kUA3bFV2h
HP+WFu3pIJWaM+VKWIQkoAhzUo0=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIRAPO1pqzwkXrMQCY+mfIdj+MwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xNzAyMDkxNzQzNTBaFw0xOTAy
MDkxNzQzNTBaMBExDzANBgNVBAMTBm1ldHJvbjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAOF3erd99JJZPjh6oAIHWEoKbBImkc5JR2IdmnfsJOTjpHHi
VB/1uo/ituRCNmd+40QqP6WD8p/rq72vPPQSZ+qx+L0NxUvf9skVS/LEGe+lIQTi
/LnCHv0ct6EP8I+NObt8qY7YgTGwL8gybMhkokvYM2UQB8SxprkDQwaluRuPae62
5L0CBuWJE6loWBBwaIE0kITURmcgNG+AuBg9Jb1VX25oozhiVeAszh5Ahdwp4zEp
1IevBSpY8b36JlbLjIECTYvSSfOMiajWnikRMgK7b1OeytXf1k3EyrxJRuhyE3dD
VYiezSbRiRv3lU4XgZD6GmH9KWGKFy4ZxLoeq1cCAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
CFTf3MFDlgU802HCDY7++n9+24EwHwYDVR0jBBgwFoAUScmjRz/aMurJIW/beF8W
NhFFkPEwDQYJKoZIhvcNAQELBQADggIBAKPswbvVWfGBuNIXT6ymT2JaghZuSxwJ
gP9B1PN5HT6dofppCBXbn3Zag7OMXXCswIovgjLSJH7oJqtE3BMmucvUDsqB20eA
S6BPa7xDYdlwA5rbMsifV29KCCJ2EcafO5cZ3pEfp15HqKGkx6l2J5LvdELDAb6x
h14paKe8R7owmXOphtJ/MzBLrpaxpxkAYcmbFRvs07mf/9HFCawDYbl+2PTrueiE
9CG67P94KKAGZqyC3U1ioNI0G3cHPT2DCR/f6Eo91dyRcI0iUrMTovH74clq8ABR
jkfjH2ab9tAYgdFJdpC7AUeUl8QbGo6+/wpUID7iF1Dph/5PMpDnbpbUYbY5Jotx
2BLRGfl4NFGfw2gDZ1nFih/KeQu1RtELzd+N9FuxE+toouM076A4+5pUC5TeF1WJ
cpbLgXHu3S5WOx1OPw5nLu1j/1daSsSRbpS48EmjsOI8kgoamHnGSpzfYmMmr09i
PdHZhm/9QCRs4AsTJQG8Mi0KBWZr+nr8pKeC75PWEgX1Bp8A9OpDBt4LqJ3WxW4z
rZZh0R7/02cv8hAC0FzVKhb18e2LOGc+E329NtGZ2SULddL2gwOO/GunTT6p/0E6
+MqFF6IsQ+9klwjg0YPGBnkoNLH+roMpeTilH9PCb/UqciJbNy8Mp3zcMIYiSZIS
A4PUxTPaZtT1
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA4Xd6t330klk+OHqgAgdYSgpsEiaRzklHYh2ad+wk5OOk
ceJUH/W6j+K25EI2Z37jRCo/pYPyn+urva889BJn6rH4vQ3FS9/2yRVL8sQZ76Uh
BOL8ucIe/Ry3oQ/wj405u3ypjtiBMbAvyDJsyGSiS9gzZRAHxLGmuQNDBqW5G49p
7rbkvQIG5YkTqWhYEHBogTSQhNRGZyA0b4C4GD0lvVVfbmijOGJV4CzOHkCF3Cnj
MSnUh68FKljxvfomVsuMgQJNi9JJ84yJqNaeKREyArtvU57K1d/WTcTKvElG6HIT
d0NViJ7NJtGJG/eVTheBkPoaYf0pYYoXLhnEuh6rVwIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAJWkfzwkKONX4q4msBD54r3/djGYumpICYIoc9hZXoVjCHe/ilCi
k4KmxMPpotlnkvW1HWW1qcNZzpr9+7c7DrTKotx+32z1cxdSRT1J7j/tWFBMdJrZ
qXr2oVmpHOtT48Tcu1abYlbcuDW6Yr1erJVh1MbB322/EhwDGmvMCkI5j8qeJSY2
d08pqVEqcJ+oH2Xn5xkyFZ408pK0ctk7V/cyPLWEad3CFf2pmmPMhios9gGLRUEq
3N9eScFui09x1wVswLn4fSd9oPnNk5lIGLCEK5z6pxZaIViYNOpfD5RXcdfo1XkH
pFOcFmNM17VIHVKg2kqErpi8ewGEJASdmh8=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA4Xd6t330klk+OHqgAgdYSgpsEiaRzklHYh2ad+wk5OOkceJU
H/W6j+K25EI2Z37jRCo/pYPyn+urva889BJn6rH4vQ3FS9/2yRVL8sQZ76UhBOL8
ucIe/Ry3oQ/wj405u3ypjtiBMbAvyDJsyGSiS9gzZRAHxLGmuQNDBqW5G49p7rbk
vQIG5YkTqWhYEHBogTSQhNRGZyA0b4C4GD0lvVVfbmijOGJV4CzOHkCF3CnjMSnU
h68FKljxvfomVsuMgQJNi9JJ84yJqNaeKREyArtvU57K1d/WTcTKvElG6HITd0NV
iJ7NJtGJG/eVTheBkPoaYf0pYYoXLhnEuh6rVwIDAQABAoIBADajh7+z7HMS4Xs6
bFBRi1nWEL6NTkRZic0DM43gUkiNyio3GP/twtpfrMbALQMDwvuf6XCo+0E6EZKU
Rwc29qvvmUHndmqeyeWNHaylTUvADrJqd6hknLHmJbIIdNm09cqzuTt+yEBMXCf9
4FLn4FTU/g99xQQrsSWg3rtbqfI9aJAJnG7b349Um3x2bg/0hZdAGZUQouCdVrse
EUnU9kY0Ho7GrTcc4jQII1nqiLsun/O7eF4xuyfrAZXUl5lpeWoK6NLyAnX5kLuN
25ILPD4Ru7UGciwYi1Q/W26bC8Gy6zgOWqOysAAavCZoioDtxRaNE9yt48Q9ADE+
+oYUP9ECgYEA852Yvn3l9Ush+2FNspCySMxQgpCULXUmmQQIyTXtXKnYuOMGFnlq
cjBWmaVzIPNL+WgkUTVG4fo9tAUuxprUKNwuF3zjeQN+Q4NbIIj5MBLlnQDLjXfi
YK0sXxQN+LZ+kEjbH3eKnfqVeb91v9ZwF9nPv5u4vauhyAvErMEM5fUCgYEA7O2x
mOicXkcAPkXRCgrW00ZJwE6LeGGL4V5NeC+toLpX2uJXr5DuY+n0tjpcEWseJRCR
AQ325Y4TrFkspPsaUlcItmYv4atbT5LzyK0rWHlk5XXluZIK4TEjb1U2NL9eCxy3
JnZ6OLwRTwMyi+jN1w+PBsROBTmFlxW1ZDr7sJsCgYEAxcKMaS7oiyx3pIpDuY4O
vFvni2X0c8ZjE9obi8NUMWHLhaL9oSblC1dEJawSfpAif49T0/yM0wsCJe4DH8Q2
MAk0/WoremQkjofGZO3sY2MjtEUd+HR2d4Z8u54bDWiP627JOo0fIMl3qAKNgrKA
AkyVgfTWjloSlcM/4AFDCDUCgYEA2bA/aEX5PiowUAcn3Pk+jtpa8wV34gCGXGif
91ifSDlOdX9Xn6kjT8vrGu+eHib0iIujH3vsKNiUvNsmSOOqOJNdHvHe9pLSD9fu
g6iQVfcbvDTKAOntcyEJ9MYvSuG1j7IvmXhsLeqmYJmIfMJHNl1GRapiISzL0JiS
lGgZTxcCgYEAz0BDzOcaHuBYn7IyLjosrMuwGxkyrHr1kAO0CZnqMyVDcpoheuNm
03ORtSacbjmhaFKEc5DV5/9JyF8emL/qOJBjBGBDtoAW33LH4FYmr/pCgygqoyKY
eIQbfnArvnTNsfT8Wwd//GPNDJtOQTbGErK42albBe5RUG40s8Rgi10=
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _statsdinjectorCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELTCCAhWgAwIBAgIRAMBTqf6kBkc01ob86uPJpi8wDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xNzAyMDkxNzQzNTBaFw0xOTAy
MDkxNzQzNTBaMBkxFzAVBgNVBAMTDnN0YXRzZGluamVjdG9yMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0acbZhqjIXt0x69TpQToqsy0cFYKSUYbSBO0
L7OepElvk4yLIqQ+XAp8ftjVqjyQyPSKB1Vx6/2+fb26rXNHU/vnVceh0VnFZPB0
PMsCiWEqplIPzOac+QB8c8WeYSGZZ/C4ZpmMUAaGdqKdfSFe6866NJvKRYsQmaM7
xz6mDO6jXSEbzIZjk+YHdnBiRzKeQA69+MovUx+Zl+KhVAMPXLh0oMAJetuawnIj
KBkGfc/56aqrUwGuNuZyURDJ6BNR+YstTkzXMXDOl4PAhmiBQJjg0cvqe0S9WR25
dPooTO1/OHW+kQxV3nsQgoXixvf5Si5YBH5VkoxoKXwmawI7wwIDAQABo3EwbzAO
BgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0G
A1UdDgQWBBRpYB0h4Vin8RrPx0CfdYDJbmqO9TAfBgNVHSMEGDAWgBRJyaNHP9oy
6skhb9t4XxY2EUWQ8TANBgkqhkiG9w0BAQsFAAOCAgEAJd+IdGe+jIHPxOVWo3g/
1cYlp+zpL6PN8SM2BLYu/t19GtRSLxygXWQKEoGLvO0ijUegmJDmtqNvsz1jyxVN
g1m6OWykGrRj9Zhhvt8yBlzmX1/H8SdaTb1YOPzU4in89CMtuvfg48ksO22iHber
/jlhuYhK/M5g5Zj8ixtm/GazuNke52o+aJdXKpncBw/QL7ThQt56qiSgZhcXB6Tq
WQM6rMPaNMef3bnx5D5FM4qDfggZeS6OhFpvjNJiQhfPEgIr7qxkVTm1rRzcTK+N
2f7wm8Srs8x3Jxuup/RYdiSnm76ax3HPpy5+tyVHjI1HvP79SEk4VpNhMDqBtZdV
udz/t4h+CtLzHAeqrxCKvIbiZ25Uzjbd72l2gb44CMlHhowzxaVuPtsySaYStuTV
0flUi7LdkcTKKUfaDXssec5yHbdNoib8zqGFdKt0+JBliv5gL/ZeUEJlQJycqSAn
lYEmcqkNLUT7YuHN4SHe2LI5zf36qFuIWSFxVxc3E7TqJb8DKHiYirKMLTjMQIuf
zZPrut8NXaa3TQNrXAI0GRFmDIrFtHqzTVGJnFxdGFjXReI7ZsN+vJy49KNZ1jxi
SwCvr+Rgya37kcEhm8r91SlOStNol5RgOJNkYqkw3xHZWk1V94jAmtxuuapPlumy
GTSZNawmHfEdCTcffAGxFzc=
-----END CERTIFICATE-----
`)

func statsdinjectorCrtBytes() ([]byte, error) {
	return _statsdinjectorCrt, nil
}

func statsdinjectorCrt() (*asset, error) {
	bytes, err := statsdinjectorCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "statsdinjector.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _statsdinjectorCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXjCCAUYCAQAwGTEXMBUGA1UEAxMOc3RhdHNkaW5qZWN0b3IwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDRpxtmGqMhe3THr1OlBOiqzLRwVgpJRhtI
E7Qvs56kSW+TjIsipD5cCnx+2NWqPJDI9IoHVXHr/b59vbqtc0dT++dVx6HRWcVk
8HQ8ywKJYSqmUg/M5pz5AHxzxZ5hIZln8LhmmYxQBoZ2op19IV7rzro0m8pFixCZ
ozvHPqYM7qNdIRvMhmOT5gd2cGJHMp5ADr34yi9TH5mX4qFUAw9cuHSgwAl625rC
ciMoGQZ9z/npqqtTAa425nJREMnoE1H5iy1OTNcxcM6Xg8CGaIFAmODRy+p7RL1Z
Hbl0+ihM7X84db6RDFXeexCCheLG9/lKLlgEflWSjGgpfCZrAjvDAgMBAAGgADAN
BgkqhkiG9w0BAQsFAAOCAQEArg/ocs/bBamU99Pu7wRY2+j5VsR5Rc2Eyk80irT4
7h81K8VElkb5BqFmhDDOJ452OhKg5y0ykGHqR6TxMFUldE89ydayFiKxbrjlGiHt
cu5bSqfw7FuReuuy23KW6m6/yJ56vRDjvRCgCMDOMZCJpk1t1wdYtTJLfmHKOuNz
AiT6sx9gxp0JPlIbnIPWG+CabGm55UM0abY3DxaCPQzJJdJgRfQy2B/n5ekEvtG5
622KSCD8/TEOBQ7hgBC6wUcz0/PQIr0dQg4SaQ9nwzdNt3ruLS8C3qoFOm0Foe2B
UdsC+QskeoORaKPCdHy/WStd0G2Uj+auYHQ8WjgKq1w+aw==
-----END CERTIFICATE REQUEST-----
`)

func statsdinjectorCsrBytes() ([]byte, error) {
	return _statsdinjectorCsr, nil
}

func statsdinjectorCsr() (*asset, error) {
	bytes, err := statsdinjectorCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "statsdinjector.csr", size: 899, mode: os.FileMode(292), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _statsdinjectorKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA0acbZhqjIXt0x69TpQToqsy0cFYKSUYbSBO0L7OepElvk4yL
IqQ+XAp8ftjVqjyQyPSKB1Vx6/2+fb26rXNHU/vnVceh0VnFZPB0PMsCiWEqplIP
zOac+QB8c8WeYSGZZ/C4ZpmMUAaGdqKdfSFe6866NJvKRYsQmaM7xz6mDO6jXSEb
zIZjk+YHdnBiRzKeQA69+MovUx+Zl+KhVAMPXLh0oMAJetuawnIjKBkGfc/56aqr
UwGuNuZyURDJ6BNR+YstTkzXMXDOl4PAhmiBQJjg0cvqe0S9WR25dPooTO1/OHW+
kQxV3nsQgoXixvf5Si5YBH5VkoxoKXwmawI7wwIDAQABAoIBAQCpIy+vh/3jnT3x
ezj4AKXUZaGMn11dD/oihALyGO77i2NAnjoBkI/eoXcevsBhvsrv1JkmoYBu6x8r
Qk3AcSgyUR+ozI133/yoGnUsNnutaX6G/91PaR1qpUHCBMRpiDnC6SlbXLUeOqVw
QHDd6nYxt23x0120DSUvTcmETL6Z3tW+HQ9nmodpN0MdAU0IceXtu7uTrhQSeh0W
W6YRbOfZN7z4dxUhpZJb3VdLOeL77GwJsJjzEKvUkiP/GFYSn3wXCZ7UBICTXt9b
K4nMbCy893f8Zq/bKjwePNFATcHIV5yCT1kPpMKhwXOVdGJYaJJG9f2sGq3MhZkX
eCkfRTMBAoGBANjfyJxVslCXRtYfDZq8tB4yclhq3cvI+QH8Hwxg/egthd54MHLy
olQQoK8A0sUDYLPc2Xg5L83QdGq2vIiCGMEvW91TzS5qzRQa6WlKiLDG+3wrLPHr
ZPNkmo91BZ3FZE5JXYvnQuBfNGN1TCDdE+1kyakH+ujWtJ1a1Baiv0OzAoGBAPd5
zqbftq3U2Oz99sa4Fym26fAczxs39rfBmsW7HG0598umi+GO81cIqePS510Rdyz/
ZHUgW7OFBGgf58Wz9tpuqjqlnTEfu51jBhPfsdSJZfphwagthAds5XnirSRu2twi
NMSfLyCixr85RHzxKKwHcKtB9rDpTSvGejJMR1+xAoGAXU8jPAgu+TetFZE0xD+u
a1OfGOWZ2gT1BeKY5TWR6OQ1NbuWdM5qAytIRyNei79hSuGZe313UOEARa2rvjvj
NLMQnlBg9jijVaQiitezqgNizlCxPMDfpUzCpzhdGz2DY59zLS9p+alcm/Iqt/UG
jtwPW7eAP8+o1A7xM3AARLsCgYEA3nSI9Wo9zQ56nLZBwSmz8JRyv5s19FKfHVkU
Jk/m4qxr+Y1RSkV0qjSoepmXzgooJbPBeqPGqp2Uc4DSl94ItRsrPCKpJYJP5M8h
pHW9Zb7Ig4SiTunzN7WEpcbEOu7HH4BEDMbG10BbBYOV8/XXyKO7fMaD2U0uSH5W
U6ZLtlECgYA3SpqHXPTndEY51dmyOIqxNTFGRZcoGpg33YBTvAoD8ULbmQc5Q0h/
a2/DXaoMwkL/okN/Je0XCSF+J49PocsPMjl2c31rz305xsPGvxkJMUctGyFqUyC1
9ybqQo6nhz++/fp8Hwt+mEWhGvxKzpTk1lXJ9hCr/3R1d3l4y9ekyQ==
-----END RSA PRIVATE KEY-----
`)

func statsdinjectorKeyBytes() ([]byte, error) {
	return _statsdinjectorKey, nil
}

func statsdinjectorKey() (*asset, error) {
	bytes, err := statsdinjectorKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "statsdinjector.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIQPJAA32pDDoyJRJDXTlBEkjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIwOTE3NDM1MFoXDTE5MDIw
OTE3NDM1MFowHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCK+yZIAQTi4aJLUIgjltQ/0pBT4+XfxEO
W74qWWPtaE6omZyNYY0lstv1gdNQcJWlvA+MAunkECuDHfx7ereKdUZ5MsHxv/nm
8glS2JkWIKnW9UxAC2MzI1RvVVIVhHYF3MDlqgh0ALXF5ZFU11eURQcijq7C1Pee
OjJmDGffe709Vo8TaJ16ta8g2MnBwJbVPqJzamDeA1brzK70roKAE39APe1OzCSs
IErHVLCyYCpuxPq0vZ6K93fm+rIBC22BnwPoKCfYKFRxjjXUg+l7KMloyFBkI9S7
9OmBAkUvxIOn1kOkhBd/Z/0r4jpqjFF47D32xhvyVtT1ZcQWN0ThAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFDO7sDvmQD0k93QpqE2FUxS6f/XbMB8GA1UdIwQYMBaAFEnJo0c/
2jLqySFv23hfFjYRRZDxMA0GCSqGSIb3DQEBCwUAA4ICAQA4HAnbCdU607jBG9Ho
Vz6Pe/Vw4FtT1ucMCUR6lCKEceYokIzcE0HUk/ty3syrarPm4jly5tlTbGxOH3p1
ojJ523kBQ9WUMYnCOEGPRnhhaML4pugUQrQWwpIcG4mehBU6GgxdHFzBTam+JX5e
DLMSpACXmELsS0aY++DD573nbdAfgo07xZXM0ZhuzUDzO9agkgnbBzJSwRKE74se
PX1gLHgs4+f0fcvOwbfmjcoU3UCxv2E71UCHGm9GkbNUJ5JkR3iPX8u1d5yKW8t7
7a1JCa8U52sO8fY7th9AHpG/Ya14aTZlJs3OWXc8Z9Ma7Tr7LibLUK94DykEBgrn
smh8aaYhfXQk3S1HWwSZpgF+5FHgkWBDFIPcsRT1gdrZQfKpd9/13RQVNjsiRTbP
UtO1N6N1CnAImtCuTOsv+3c4DJJHpiPl/o2pAnf2sO9OmzeA/0DJpAQ1TSOv846c
fbAKyjaHDp6aVtPdH2LYOqlnmqlleW6a8WcFpwJZCLpLGBCf98AX/d8ZKP5tfe53
/96GAE1ErWFIrEgjySLTUAPIUyVUBZYeyuSrtFl/DKTDNJqSrQ/0FuSMZAZ87W6H
oDWCIHGUJEYycUpN5mo+JfTNp65JGt1cy1LhI/tghqVOt35gTJURKHqj+4NaM6UH
0+3fI3lYZPtbPbJ4MM3Z0NUOjg==
-----END CERTIFICATE-----
`)

func syslogdrainbinderCrtBytes() ([]byte, error) {
	return _syslogdrainbinderCrt, nil
}

func syslogdrainbinderCrt() (*asset, error) {
	bytes, err := syslogdrainbinderCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCK+yZIAQTi4aJLUIgjltQ/0pBT4+X
fxEOW74qWWPtaE6omZyNYY0lstv1gdNQcJWlvA+MAunkECuDHfx7ereKdUZ5MsHx
v/nm8glS2JkWIKnW9UxAC2MzI1RvVVIVhHYF3MDlqgh0ALXF5ZFU11eURQcijq7C
1PeeOjJmDGffe709Vo8TaJ16ta8g2MnBwJbVPqJzamDeA1brzK70roKAE39APe1O
zCSsIErHVLCyYCpuxPq0vZ6K93fm+rIBC22BnwPoKCfYKFRxjjXUg+l7KMloyFBk
I9S79OmBAkUvxIOn1kOkhBd/Z/0r4jpqjFF47D32xhvyVtT1ZcQWN0ThAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAnhsElT2QwN7cSuttIqBBW6BbUl47Yf6/obp8
6tPlP5NbuSxU4xYkCdopZHGL7j8/2vealiNJyXWcLRxEZJEuzd1NHLU6xTALPPhB
IUmZsiuvuj1Swc2Q6a44unDYWmUMTqgvrR2kMPZArbSUTalg+NZbiiQDxqAM52kt
G+2P2NzcDbqYFXMZGyzzQO9a6NsA9jE0XXvr8Hn9/q0DoujfmxsKhxClXsWNvSzL
1fPwzFvgoMb2LaloGwtCuYGJ01QeT14gijFDtISt777oUy0ALay1xUw5f7RAjT/e
rCGO7CKqFyM5lIjxIwxb2fXvqv2PuVVykhBgO8FHzhlxK2Q7Ww==
-----END CERTIFICATE REQUEST-----
`)

func syslogdrainbinderCsrBytes() ([]byte, error) {
	return _syslogdrainbinderCsr, nil
}

func syslogdrainbinderCsr() (*asset, error) {
	bytes, err := syslogdrainbinderCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEAwivsmSAEE4uGiS1CII5bUP9KQU+Pl38RDlu+Kllj7WhOqJmc
jWGNJbLb9YHTUHCVpbwPjALp5BArgx38e3q3inVGeTLB8b/55vIJUtiZFiCp1vVM
QAtjMyNUb1VSFYR2BdzA5aoIdAC1xeWRVNdXlEUHIo6uwtT3njoyZgxn33u9PVaP
E2iderWvINjJwcCW1T6ic2pg3gNW68yu9K6CgBN/QD3tTswkrCBKx1SwsmAqbsT6
tL2eivd35vqyAQttgZ8D6Cgn2ChUcY411IPpeyjJaMhQZCPUu/TpgQJFL8SDp9ZD
pIQXf2f9K+I6aoxReOw99sYb8lbU9WXEFjdE4QIDAQABAoIBAQCEpwdzsUi3pZma
+91yam7+TfqH1ffucvPPEGRBgGJhXeJnEtK+UAfi2melOTWJffDukiU47QCnO1jO
sdy86yCbKfWkdUXEh/gNjAtMmwcy88u0PE8EbgMue5OCoBJ8+sq6xI7QGDLANX/5
nBWGlbuSYvo15K6GEoK8iVvHFfCc3zWO7k1LGr89NZww5H2tTXwrs+WB7rRAKHQi
AnBlIcDYFdOZVGhOlJy89SsC0HfKkx1EMa964ry2thm3urfrEaj6cJ+BHCOy7eTN
WFvU35JYrZ/yB39nztTuprzLCQusFuBIXd2/K/7ZCMSzIFqj2+dvJbTMdtqNp+Bs
sXXI00PxAoGBAPQQnpWFzBdN6ZMtKMg83ZPRmna1oHcPHDoasuelFKeM4eFExBWG
xS0r4HN4RInO8QLlJpC0AgbAUIIn9Pay0GF8dIUmNt5VB12HE3P83rkh+sm+cZ/n
0CyncBZresMV7NOq35dmXNZbiCPaEXB3UxODV/tv3gCIwryd3UsC1WQ1AoGBAMuq
tDYVn+VHPKkS9yAjg0tTRwiVgY9iEUSKe8LRuuGLHx3Iv4nU4wjlkucYeSG4Jsk4
yZoaVeZPhxHYFiBcq5sffKuzUwbzo48daAw6jdMwHABda9HUaDaacQKTrjmCAsBT
+aPB6JOZ4RAFkEhilDt6PbvW0F9nnt3ovzqbnNt9AoGBAJT+MFGHRHhVj+nQ/7x9
q6a5plohtrv39XtjISRYmqtOTfZ/TFT32RciWfsjyHN4aZki2tArk7EbZgqO6fRQ
ZPWeTGOcWJKRxdVKyI1eKXlLTRYrtKGxmlwoOzz0kBTYJaNyBN0gGDyj1BBO56aI
saaP3/4W5Kfe1ULf/F/2ct6hAoGBAKnYnB0Wf5f3hpEBbfHxa8bfljeEZt2qTPg5
/OgFe7IoETUHeyR40zVSLuZmNG54YnAg2Y+YMta0r9GjwSAP6FSfN5sBG1aKzHXH
ckPweOIMFu3++rGsT5Rpy6D4g60VzTGTVnbIeSrOgzCXUzHqc+/+C4mgpXlKsuQg
+4jmyTMJAoGAG617tzvYuWeQnoqSsVn/L0bP+71V0tZhJfoVeaegWPH/RFZ/IkKg
uYA6fxlEQEshm3zzqAwf6OGghl3EDOBzmf4U6aHctXvgW8WEMaaRqnfAmy3ut3kE
z7l954cXRtiVtGwW4nmvD9ouK4Fl+z6WhKztKIa7K+m96k7Fu9u75VM=
-----END RSA PRIVATE KEY-----
`)

func syslogdrainbinderKeyBytes() ([]byte, error) {
	return _syslogdrainbinderKey, nil
}

func syslogdrainbinderKey() (*asset, error) {
	bytes, err := syslogdrainbinderKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1486662230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIQL8tTPCBjwbpLEn8TJWn9zjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIwOTE3NDM0OVoXDTE5MDIw
OTE3NDM0OVowHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDKtCCfKk7oleY6amIsdoFqT2vl7UpI0mNr
OilV3j8Cf+pJEG8e65f1ZeIp8bwOPRjpIDv3CKBfK8sCEFzlSPUyg22UGaCXXAqc
gaa53Bo3uY1HIcv+z3ADscuvvwlr+XsxwaOOp0UThsmDG4VlFVkqDNGh1YILZmkk
1HKMODFa8PRxNZoiUsSapvznVm4AgZq7DbsTiiZ5vThrcc5AcRcdO+V/nD+2on6T
P/Xy1CJp31hhFatZTuWmDDhboBeEjqjcJ2q8vUBe3azGBPGzF58mmZ8rCI5u3sgS
kGYb1X3BtX5t9kRUQhm2E+vohLGg5oTwtpa9gZOXevPHDzecyF3RAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFGB0AVc5ri4axmE3eHiE7WzEvWEHMB8GA1UdIwQYMBaAFEnJo0c/
2jLqySFv23hfFjYRRZDxMA0GCSqGSIb3DQEBCwUAA4ICAQDCWRi6kfhzoLpqDRx/
AP4mwa1OMbk8TQwGS3TrSA2pJbRJuZeSMlGB6ohwvt8ZmC/zHWLRM/ScgseVDTkH
H2/znfUej0zCFtAzAnik043Jx5aWnBxzMkMVqZ3rLGZcRWiAYOLYWU5bOgWNJ9o3
JKYvCh22S8pOu3DI2LvrJ3mjMsVVWBd7jQnqA/LjJ1IBVhXVAWBZYSE5EHCKzWMQ
5zbmzZ27wrLYK2fzhcldwBYrfWvURU0qwgkqtP1tJRAqwbY1g+X4nkkkxhWxe4QF
vUwdZBDR7owVYEp0iLogas51Fyy99V/mhNoTVT42NkoI9kqdB9H5HCHEfMa3x126
n8BE1NUwoSSHt+8wnBSPBnc27vFoBrmJp4i5aKNYqGN7O5H/3RBC/Aj0Gc/jgJNc
lXa1acvd98PwpE/Ap27R1q4fdeuPH08d2wxUX3PZ03jvSEPaBC6oa8Y6g4ePlXTQ
ZTy2ajhOY7q3J3aRkqED0DYGDuEF5+5lvPRi8UZ9bhewRZO3ir5hjh+TfdgiV64j
efYOy46D03csFPsSXtWYY7td/9WT1ekJkT/1z+Tb5pluuL4byOsInCdPcHlxfHEq
t9Q1Fhcxe6eV8qhShWV+IihgpoegJRMY8D9ZAPZ4tdu9vQu3BQBsy5xlj3Kq4RmJ
DIgdi/4LnS2jHKJdRJjcS/YFrg==
-----END CERTIFICATE-----
`)

func trafficcontrollerCrtBytes() ([]byte, error) {
	return _trafficcontrollerCrt, nil
}

func trafficcontrollerCrt() (*asset, error) {
	bytes, err := trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDKtCCfKk7oleY6amIsdoFqT2vl7UpI
0mNrOilV3j8Cf+pJEG8e65f1ZeIp8bwOPRjpIDv3CKBfK8sCEFzlSPUyg22UGaCX
XAqcgaa53Bo3uY1HIcv+z3ADscuvvwlr+XsxwaOOp0UThsmDG4VlFVkqDNGh1YIL
Zmkk1HKMODFa8PRxNZoiUsSapvznVm4AgZq7DbsTiiZ5vThrcc5AcRcdO+V/nD+2
on6TP/Xy1CJp31hhFatZTuWmDDhboBeEjqjcJ2q8vUBe3azGBPGzF58mmZ8rCI5u
3sgSkGYb1X3BtX5t9kRUQhm2E+vohLGg5oTwtpa9gZOXevPHDzecyF3RAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEADj1f3uwzTRNs6lCh2Keqt9EXSHo4g/Jm8DmT
cNL7bkU2A/WgFeGQKqCDo8NZNzcERzBfCN+CLyoZxumQiuj45CAS7TkIyYy79Dzt
bAXXdLhrWtyMPsEitkjpjoTIyjpASWucL3yg2xE8B/FIuwgmN9QODM3T6wvfPhAe
H13nObYqjHO07t+TXncEONKCp/OV3cP5l+Z5Y0hzEdX+HbmB0wGt1R8G+FVb6/Dp
zwUTX51Mr40Ah41uvvdepSeic4Q8M75AJeLlz7j4RYlOsatD5N0dqXIoNuqM8KgY
HOje8cIbUyrcg10/j9MaEo1BmK+yvejyXQKz1dzWHInr8H7MlQ==
-----END CERTIFICATE REQUEST-----
`)

func trafficcontrollerCsrBytes() ([]byte, error) {
	return _trafficcontrollerCsr, nil
}

func trafficcontrollerCsr() (*asset, error) {
	bytes, err := trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAyrQgnypO6JXmOmpiLHaBak9r5e1KSNJjazopVd4/An/qSRBv
HuuX9WXiKfG8Dj0Y6SA79wigXyvLAhBc5Uj1MoNtlBmgl1wKnIGmudwaN7mNRyHL
/s9wA7HLr78Ja/l7McGjjqdFE4bJgxuFZRVZKgzRodWCC2ZpJNRyjDgxWvD0cTWa
IlLEmqb851ZuAIGauw27E4omeb04a3HOQHEXHTvlf5w/tqJ+kz/18tQiad9YYRWr
WU7lpgw4W6AXhI6o3CdqvL1AXt2sxgTxsxefJpmfKwiObt7IEpBmG9V9wbV+bfZE
VEIZthPr6ISxoOaE8LaWvYGTl3rzxw83nMhd0QIDAQABAoIBAC4FLS7VrSqS9b0n
b/iGQyV+uJFwCSB1W4r5nm7XUVjg77D84S2U8WAObIV3U2msJ16uKc8RD0/sIl/q
lRydLsX0Hsmz88jJZcNYkCC8PtuN7exLWQQV1mmQUR0qcxonfvex7c8yXLVtMYzp
j6R+b0rjtChYz/iEnLR24zbAfzwU9v4CexS3arYY8MJr7abEHn+9UHMkv8cGJPBA
c3Ggdw15jP2VRbI7kJbNBUTQ/mt8vYRnc7ymmMS4313YdK1gPC5VI3/VHwTnbTOD
qb11IQ7P7RCqXpHcc9G0NllmE1FYAiItqS0Z84dL6X3ic6SP1N05ziY81uXzXRcc
lwQUBB0CgYEA3OjNwO44kxz0N5cImemluUhIfWx7TqNkDmHfI/UHH3XXkB+uqnkC
dCDb1weDTWELVBnz5fec3qLwg94ENgAHJzTkOppvDEACrdROD0lreDCAF1I1n+nU
q49fw13FZHT3PSKBcgt6xrAasa/WoxraEPDapPGI4PXAsxQrfehw3mcCgYEA6ub+
PWMzyaWwlo9rRAiDdQ5udAf5D/ckq8blIt583VA3/K2j/Yx5KNe0G5WKwkWyxpOc
Vxwt/Emjutglpzp+6U51p469pVll4GNpD0y8Mi4nx2TM0dn3GtdBW8bQKxDYapWq
wSJxUhKhEf+gqWyTj2yI1fC9XvuASW5U0I8bzwcCgYEAmsPW8mVy6U4NoqyDcCEK
48XKU2Se9rbtsE3NIMnXVakffm9T1Ua1+1nR6tHuoVVttFwCTYiuNCP/UMNIO/TF
Dii2BICRcAmgVtw4W+laC3gfJTeJLiGJxy/JLXwSgJCZbhEwkw+L0osqCHZibx6u
y9ORuqEk/kXt3QgyeCFSgd0CgYAXQwzGU36bZ3cXUdiTgixSeT1i7C8z74uIH0gt
rc67s+f3c9Kblz+gVcwWNzboijJsC84dqkK7iydVp3YDG33Z6NUp5K7PIw09rVqI
E1dHuN5jlo3Z8jXQSKTGS+fte9uSooOoYJrMP+AHgkMMxB3QxDTAyvhV4Z4Qp4Zq
qOFeHQKBgAULS6sl4svYZnC5p3mjQyHkAquyVXcqMESZtxQf/k7GZfxYMpr0z2q7
yKb6zVIeea9y2JXD4/NNbF019XSLRGgVWFfgSOpL4D6x8SrW72btZC0CsvXlWqY2
OgdOY1rE0KzcG0bChOHz+G4baCEzalvOmE87MRa7/7vSj9/QOgqN
-----END RSA PRIVATE KEY-----
`)

func trafficcontrollerKeyBytes() ([]byte, error) {
	return _trafficcontrollerKey, nil
}

func trafficcontrollerKey() (*asset, error) {
	bytes, err := trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1486662229, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doppler.crt":           dopplerCrt,
	"doppler.csr":           dopplerCsr,
	"doppler.key":           dopplerKey,
	"loggregator-ca.crl":    loggregatorCaCrl,
	"loggregator-ca.crt":    loggregatorCaCrt,
	"loggregator-ca.key":    loggregatorCaKey,
	"metron.crt":            metronCrt,
	"metron.csr":            metronCsr,
	"metron.key":            metronKey,
	"statsdinjector.crt":    statsdinjectorCrt,
	"statsdinjector.csr":    statsdinjectorCsr,
	"statsdinjector.key":    statsdinjectorKey,
	"syslogdrainbinder.crt": syslogdrainbinderCrt,
	"syslogdrainbinder.csr": syslogdrainbinderCsr,
	"syslogdrainbinder.key": syslogdrainbinderKey,
	"trafficcontroller.crt": trafficcontrollerCrt,
	"trafficcontroller.csr": trafficcontrollerCsr,
	"trafficcontroller.key": trafficcontrollerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doppler.crt":           {dopplerCrt, map[string]*bintree{}},
	"doppler.csr":           {dopplerCsr, map[string]*bintree{}},
	"doppler.key":           {dopplerKey, map[string]*bintree{}},
	"loggregator-ca.crl":    {loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt":    {loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key":    {loggregatorCaKey, map[string]*bintree{}},
	"metron.crt":            {metronCrt, map[string]*bintree{}},
	"metron.csr":            {metronCsr, map[string]*bintree{}},
	"metron.key":            {metronKey, map[string]*bintree{}},
	"statsdinjector.crt":    {statsdinjectorCrt, map[string]*bintree{}},
	"statsdinjector.csr":    {statsdinjectorCsr, map[string]*bintree{}},
	"statsdinjector.key":    {statsdinjectorKey, map[string]*bintree{}},
	"syslogdrainbinder.crt": {syslogdrainbinderCrt, map[string]*bintree{}},
	"syslogdrainbinder.csr": {syslogdrainbinderCsr, map[string]*bintree{}},
	"syslogdrainbinder.key": {syslogdrainbinderKey, map[string]*bintree{}},
	"trafficcontroller.crt": {trafficcontrollerCrt, map[string]*bintree{}},
	"trafficcontroller.csr": {trafficcontrollerCsr, map[string]*bintree{}},
	"trafficcontroller.key": {trafficcontrollerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
