// Code generated by go-bindata.
// sources:
// loggregator-certs/doppler.crt
// loggregator-certs/doppler.csr
// loggregator-certs/doppler.key
// loggregator-certs/loggregator-ca.crl
// loggregator-certs/loggregator-ca.crt
// loggregator-certs/loggregator-ca.key
// loggregator-certs/metron.crt
// loggregator-certs/metron.csr
// loggregator-certs/metron.key
// loggregator-certs/syslogdrainbinder.crt
// loggregator-certs/syslogdrainbinder.csr
// loggregator-certs/syslogdrainbinder.key
// loggregator-certs/trafficcontroller.crt
// loggregator-certs/trafficcontroller.csr
// loggregator-certs/trafficcontroller.key
// DO NOT EDIT!

package testservers

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dopplerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIQVW+QBwr6TuizZr2l9X54yzANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIxMzIxMzEwNVoXDTE5MDIx
MzIxMzEwNVowEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBALwVHN4Y+6wrO3fEMDihb8ZcubSgXsJ+3ROw4YXtTKZVX4D4
RwlVO3J8uEMmTM+sr0qt8StpsZ0rV4sazLNxoLbXfw269LPva6+ghKriMu7mFZ2W
yztAckVZEBElJRQS9hPonpbChNeNNzbplkSmok9J8mTxPzh5NkamYBW8bJTp8+YC
7A0RMggEaJjEgZCCH4r3QvP29PmGqJ8aSi7yoVZbGbkOqJi/Qu+vbczwjA6C9ruw
a+itDaXPk+sBYi4qUQSg+ArWwZF5GP60wAfbRS+uy9FNiW65YczYntzOIVAsIMQ+
NcdzFzUgvZcMxlUCvvvFuMKu4P67bcLSwoGiFn8CAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
pBgXVC9JijTXK6oLrrt9OaIXhMIwHwYDVR0jBBgwFoAUQC0uMgqPSAaoXVbK4V9T
14o2tWQwDQYJKoZIhvcNAQELBQADggIBAGhLUqa8wf0nlDHIsqinLGjlJjp6oFO3
0YrQSbQ99j09+jMshWSp2/XRCjjVLNisKKWnqPHuoC3Ett8TRveos1duxrLd1dQ3
X/fDK42aa8sm6PAQJ42EPxlrD+7LksdW579pU6hA5oS4h+3gP4010VJw6eE+/Lb0
9Sh2aJIVqMJLOWG7hD545Gr4fj9YZfjV+d8qBd7KnuyDshw1dtiGV/Osmh7PHhuR
lXgcR6yGT2JdItLmkTP8kRZxypP5rDBHahowEFCRanZXVGgdd1m0Y5NzTYbnwzNZ
qAt/u7mVVXXKreqebUwGn5vZYg1slozrP6wMvyqoNLeA/q2kjQb6QpcVnyCVDnN/
DC1AclC1N1DAa5l6Q/FFqLKpZ5YX8rfeatcuG9eNj7bABcJNxq2oqgZFeD9+XK3C
3YZI0i0FGCPIGjcFOnvCVp+A2fqa/yKYnDqX4pue0CdjYdrZ3TcEvqeUfxSciFTb
X3iOxn3gPhtVpwCP05kdsIELJYReR4vSoQKOm+WOiejMOMR5EVmtoYhUugxKBF8u
JKGApI8vNqlw63rxnWLYXV6VpEXwj6SM+tm9eP4/TTH/L/fYhivjHwXgB4VHnMk4
BqxpnkSsczRT2Q9S6h5bD7lfqpLMS4k1jDtjFwyF7gC/8Ms3D/eMKQQJ/zriOEU5
OodQ8Vukto+C
-----END CERTIFICATE-----
`)

func dopplerCrtBytes() ([]byte, error) {
	return _dopplerCrt, nil
}

func dopplerCrt() (*asset, error) {
	bytes, err := dopplerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALwVHN4Y+6wrO3fEMDihb8ZcubSgXsJ+3ROw4YXtTKZV
X4D4RwlVO3J8uEMmTM+sr0qt8StpsZ0rV4sazLNxoLbXfw269LPva6+ghKriMu7m
FZ2WyztAckVZEBElJRQS9hPonpbChNeNNzbplkSmok9J8mTxPzh5NkamYBW8bJTp
8+YC7A0RMggEaJjEgZCCH4r3QvP29PmGqJ8aSi7yoVZbGbkOqJi/Qu+vbczwjA6C
9ruwa+itDaXPk+sBYi4qUQSg+ArWwZF5GP60wAfbRS+uy9FNiW65YczYntzOIVAs
IMQ+NcdzFzUgvZcMxlUCvvvFuMKu4P67bcLSwoGiFn8CAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQC7PXeyU2mXR8GQyGfeImMxk0Z5NRcaj5gcEIEk1uzxQcKA69K4
D//0pYamTBNp+kJfWUM9k2fS9opnfTARMAlA9MeuivPbQYEMrCZAtp5+vgCicE5i
1DYijYd0bYct13l/+datLLZbw3T5UnC8cmCl7NZPBZ+07tnm1xtgutHtZU1iiiEp
W47OV9bcvireVX3qt2STT861QtaA1ryck6PNi4O2GZvLuumSYoonflQg625U61rX
Qp/QcTADBMLlBy3VHeNBj9pNKLlx53Gcoko+uMuyX4MbV/QaDBja3HrdTCiMGRA+
+dToRE6jgxwKLOvmdXX4TfGflyjEo7BiExW2
-----END CERTIFICATE REQUEST-----
`)

func dopplerCsrBytes() ([]byte, error) {
	return _dopplerCsr, nil
}

func dopplerCsr() (*asset, error) {
	bytes, err := dopplerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAvBUc3hj7rCs7d8QwOKFvxly5tKBewn7dE7Dhhe1MplVfgPhH
CVU7cny4QyZMz6yvSq3xK2mxnStXixrMs3Ggttd/Dbr0s+9rr6CEquIy7uYVnZbL
O0ByRVkQESUlFBL2E+ielsKE1403NumWRKaiT0nyZPE/OHk2RqZgFbxslOnz5gLs
DREyCARomMSBkIIfivdC8/b0+YaonxpKLvKhVlsZuQ6omL9C769tzPCMDoL2u7Br
6K0Npc+T6wFiLipRBKD4CtbBkXkY/rTAB9tFL67L0U2JbrlhzNie3M4hUCwgxD41
x3MXNSC9lwzGVQK++8W4wq7g/rttwtLCgaIWfwIDAQABAoIBAEV1mpqfKVq1AJpD
dveDDy93kRGW5Ef56BVcjn0SXOtUvhd4GWvl8TVfwAD0hQtxH695u4Yn23NKzWLO
++gNP6gmv4JHmBVXhzJuGnCtZtf5WuQ/C0EPlOPtd1SNnjriocRKdT8CCWM9gLWj
4F3sGCcmDQGgYpOtmBDRYszEMGlxtuMNp9ZRjDaqZGxY4gf8SccTHurHJg2E91m6
EtIeL6aR8EJS9X5QeqtK4oIYF+IN1ZNkCdLqxrVkZMRflO4cx6OYsl0Eui90u/4h
ryoLeG6wLz/iwcclcSrc4k+Q1DHK056F4QsSDQmOMcg8zIKhP99xwP557SFIRqaz
lMIu3mkCgYEA0VGYaor7ETUx5B1kIbrkEWkQ0Bd4lsO4fQx8Hht8uG40R3rmkdPF
b16xsOn4jyPrTh2/ydj0Im9c4sSblCZj1O1BQVvlruBIu3xfcC7I1+6N1axgfSG6
lZjpYEbQoXwzcYMRYIDol4vZnJe3YyVXonBK2uLKWGbC8V98aydLYvsCgYEA5gcZ
UQMPjdyUJI9f7RVyiwjlkiOf5kdftsAzfBcsUOpAEiMLgC3Oi3Feu54YHHS+hfFI
JYPtfc+YH35q3joweI32P66qbPzeoWfUiAa81L11DQhV8hogkT4JBO92F7Bblm/Q
uImvIFqv0Ya8mjm1bfX27sDcK9Gcspivq+C3I00CgYEAodg2QkL9x5ta3SeAkbgA
uhmDv3I2clQY5M9vdJQKRkwnrhEwEBcvNGKCf+kYoAzE1tyXu0k90xZKOqiMJuvc
Cvn7l76nhCS0+Ao9fO8fqh4wmsMyw+39Z8gYwrFehU4UNLOEDxr9PJgMhVClokpw
TRAIQOBUVi/2kU0kVXHHj1sCgYAtJdGLO/2Oi2+sKVPbla0QquNcJo/Yw8N+fATe
4zF4hDGlHanBM7xpVAwS6Pm0hBls8qmFa3puihNCgy54hZVD5CEj6KVclNkhdt6Z
ADGJ09GoiC1OQmCIAVQF2vYjuiKPyUx/G876m7IMftR/tLnuZitcOxA7rX2C9ELu
ikGHtQKBgQDAqPbFc56HacWVxkn0px7G2GoHBjReeU7XZAk3Byg2sjgxcvWnE26Q
9S9zdldjLaj7OfqrYaO9o2ibrUFa2qSkS2qZDuKYLQx8EDbUKNAC1KMTBXXR8pjd
ij94gwwqRUsZwVwOYCHYKVcxXHTc2gukJBcshqrogh9oUCgBUJJNqg==
-----END RSA PRIVATE KEY-----
`)

func dopplerKeyBytes() ([]byte, error) {
	return _dopplerKey, nil
}

func dopplerKey() (*asset, error) {
	bytes, err := dopplerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE3MDIxMzIxMzEwNVoXDTI3MDIxMzIxMzEwNVowAKAjMCEwHwYDVR0jBBgw
FoAUQC0uMgqPSAaoXVbK4V9T14o2tWQwDQYJKoZIhvcNAQELBQADggIBACvLOwFO
S6CwZRbZrEVEn5f/9OrpEKsyrgrw3D9DnSuIqCTqel+nrTl1RU2Rx+sJUcRXRQMO
nx+r+vr8xzmflaqd7revfPN8VfkvqEuEg6XQH7Kc3w0EWSffFfCa0EReueBhY3vZ
92v8dVywW8V94Qt/vD+uWyCOAKyfUKF8/92QyE6ClC5omlI5tkIjISj5ABjVDTRG
WkdlZiuLYXvw89GrbEKIgWAqlb18sUvbreDKrQ7A4UdHjNWHY2E0XWQFUKxlRli1
r/t1YkDegQ5c86QWsB9KCH1rIPpHH6g7CASp52WPOP/LikhHHUTDbzfdKD5v79Ok
OxnqPBA1JSCtI2cTnYsO5W9x1xyDV0MLlODINnyNG49T3ujFrHdC6Ifmon7J4RKh
+1GzIkXkvOLJPYpUsrRjuJnokX1kIm20BO+VsJBhwvpTjWGZThuWuAddujUpv0S1
An6cJCFRj8vF5eLsYFfN4xYb1fRyHfVFy2DAr19idG3yXPoAimlRtVPBS+8oQeke
wfiLqBb7OmMsXB8aqSVhslh65xL1nxO+LRJfa96pujto5lnCe+ticQUV1brjngDf
FBgjFkKldQOJ4a7rYGu2NWDcThPLzU6jsJj9NNuw7IK/u/XU3v4qLUWbzFsKOMY8
FIfJzRJkRKvcwkERYwhTWQAhmUMkQuwoGaKS
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE3MDIxMzIxMzEwMloXDTI3MDIxMzIxMzEwNVowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAKnmrHcE7c2BbFLvW9pn8dks4eszivU3Z380eOoDLRvzdChYCK0Vnuy2a8EL
9RjE0y471Wiw2Zwj1ObD3PWhvjvoBJcCSL7un97KUE+1lSTnL57Lj95iK3Kmnwg3
dgInpkdyTiPn4zFbb+xlvIlcjFtISmmYha9IPEKu65WAPlLYkIdnsZM9RRlC2KdC
hvZv3kqy26iI+L3uRszT74JxmSz+Z8j06rkcoQQcXwrsuvnmkTT8xlPEz0Hk5ZYz
xSTlqeWmBipMq7kfv9j54PAhfVyQv9C7K1MaT1UWX7lF2bWBPPy3FWcwzZTdjxEl
SpcQzGinpBUrZfhf1obYbldKogKKfI62BxL49hCf4Cj1sOCb0+GM2U+CnaxiKVBr
ggAXMW2Rv1TziQDD9NR/32DPGn7uUvY/4TqpDpXJBnqT30v9c/ZBbv976j6Z9SZq
ccvXm0vDBrU6ppl5iVcFCMLtsyV+qZRgRNMHjOQq85SxqBL8Yg6Pj2HJaCOt+7iU
JLGcAwF8MslL2XBsaz7Nd/+B0RKOfXMbEolNvX91K0VAqDVru6zaHX3fZ7rbinvE
DyHc1chC4cRnmpkb9Fxse7Y1LkvCzSiDJsoBexXwUVDF7TFxsFh+4ysX9oXuRbD1
R833qnPAXblRL+eBcWk1V9KGu+vk+al2fQKwdtMdTSQAjYIJAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRALS4y
Co9IBqhdVsrhX1PXija1ZDANBgkqhkiG9w0BAQsFAAOCAgEAcOQ9nhzhUfJldlIb
XMw0I6/haqHexYtClsND0wVRsyaMIN4xoKzEoPdzsmF/iFuLCF2jgPK6tzIFE5tm
KDTXNP/2JEqLa1NPrrTwsO1teRBTgcq5KO5v6g92RlqeYNgIeaXY5gjwAdrsVeaW
/1RbTe6yBef3GWRXdo3lkla7rRWZWqKNW5AP+cNRgeDkpibgShNvOxloYxdrLRpp
gSIWtcE+RtEg6qxG/mpL4UdCXWUyPVY0TxAwSlBrqEtQ9lTx2zrXFYK8CYc9AckM
SeHJhlIMVzigFnvCW+wCTZlIJsYAzyjev5ASkhj4szkV4V8XcwBiTIZ9RGE2SCFz
2N6M+Ex4OIXgDMW27Pq8QOFyDn3+Imti5Uim4CIL1Ca2WUlzSQOccs7KpOApSvtU
0RejQBWwOlHGwD/lO1+s6bZH7fr8Z7FiAgNpfjMIjgVkE1hB5tR9LQ5rkH5et6GM
8Oba4w4GtbOZ25VpNJW0pJNQeUcmhdTe9Q6syyTFM8/OkNgvb7xPQkqvR0gch3Qh
l6BIhZQL5MTQEdQ7CM4fPa4AVH6lnaSnogzn56wN07K/7rnMtdYqg0uGgevUYsVw
QfJ6770HaiTFP+xrh/YoRbcGROHtpv9bkhUeHxQbebnXlu6qv53/rV3buRyPtmo8
ANIuB68/FyKn3zVnesL89DS+NWA=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIRAMHQFDgtE/EFkfOJoUzttw8wDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xNzAyMTMyMTMxMDZaFw0xOTAy
MTMyMTMxMDZaMBExDzANBgNVBAMTBm1ldHJvbjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBALjkuNTFo77QdHzYEmOjO5Sj0pmr2ISnXEYqUGccog6BOaev
5ERp++bOkkp2FQIa5QnMI9shqG4NBy9y8dea9s40ae9WsXDyvdV4zJjQim4SzftZ
lX0esgKBt60qmXdrzjSbne0Ue9FsqnSqbI4a7D+rVwxZK+Kkluvbewf32gNRnkP8
KmCDiWVFa8aKRFZsULUa8DX4O5p71jZGGiaGn45XUplTzldTPFhePnbODS1p9SK/
E3vF8XJPBquzBKsMwZL8zJZ3GsLJ7SaiCTQj7BP64ZXb7fSmUmbmME6D0vEz+qcg
KEVakjQds7zL1Zwfa5uAPJWZywbAkDwHBOwVGvECAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
cNFNQaQIoPQA265yZLA/v49g0ZowHwYDVR0jBBgwFoAUQC0uMgqPSAaoXVbK4V9T
14o2tWQwDQYJKoZIhvcNAQELBQADggIBAG0ZWeG25tPck0WGMKYGNwb70oucgfW+
5VJB6JLhEpQVNmPkTQ2lRbpQ3Q83IDhaXk4t2kD1g2YKTUDmGYCK41ofPr3h3Apm
InoLs/UYYJssFej219w/IReoJpBISU75cQvN3QsBvAA2rcYbOxXqYKwbDGehyzaN
NwfZVy2b3b13MWorRpJnaTo+2DBT8YBpFvXJnnVfpA6V/SS77UgGKIfB1xXuvAvT
I6fj1zO/BiFvEZA/v1tL8yssG01KOEDnCHCrQbhhNDivCKJoNexTl59C7LZrcuPi
Mqom/kGC7KFERdo9apOza0Fp+1ujHQPUEAZ/7bRG5hbG5sWPV6MWijK+Gbpe7Gj8
Jd9A1a5Kbsjnp0Rl35SktbRYxGZ9OIGfc5z+PXH9GxbT6SQbUIilShSjNiG0lXH/
6HSi2wW3UfOPlac8/i+9SEMkMbLh5UExhnjndu6NDRfjGtqu79VHYt4hwIbgvIkN
COGArmdRYpqqWp4PsmuUCZo/7JuIRKhfH8Sm5N4QRZelwUll4kONKs9pVy39Th6r
EL8+YJ0wUuSRTJnloFy3pd7hr28+llmsd8Ch30X+rcyMiuwtYC0iDwP7Fm0kSVHS
WNvRIROX5J4Fa7Ig5B1ypCDh3qOAqwooJRQeqeebX/J1pXr+h4UXRyBI3Yqj5LGa
6dTrIgwryAEh
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1487021466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAuOS41MWjvtB0fNgSY6M7lKPSmavYhKdcRipQZxyiDoE5
p6/kRGn75s6SSnYVAhrlCcwj2yGobg0HL3Lx15r2zjRp71axcPK91XjMmNCKbhLN
+1mVfR6yAoG3rSqZd2vONJud7RR70WyqdKpsjhrsP6tXDFkr4qSW69t7B/faA1Ge
Q/wqYIOJZUVrxopEVmxQtRrwNfg7mnvWNkYaJoafjldSmVPOV1M8WF4+ds4NLWn1
Ir8Te8Xxck8Gq7MEqwzBkvzMlncawsntJqIJNCPsE/rhldvt9KZSZuYwToPS8TP6
pyAoRVqSNB2zvMvVnB9rm4A8lZnLBsCQPAcE7BUa8QIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAIKXhoVJhNUm2qgwtmdkOFl/6gZc6+0sHKGRYmyDBtuAndliTMDM
ApCL03L69RkgohY8f3Udk5B58IFKRXzoCOxew7GTyn3EfVewMaVRjIq7lQDTZVzk
1BtSTZivc5T4rCYZWPkR8XmrYBo3B5dAJ+AU1r4RQOWEdjv87kwvrdFO9Ph8z7Ne
+H4jPZtO9hAD9/XJR6J6CtEqY11gsApKCjnahwN0gX91HwdH+KQ5zG0G6DcJwcxR
xKYB6vYgD53izR5cTa2hOcZuEYFWk+azruzkPn4IAkU5QHQou5qA6MBn6xALffHA
W3aYiXKa2FHsC86XwfwhHIPRsrJRpI+kUHo=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1487021466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAuOS41MWjvtB0fNgSY6M7lKPSmavYhKdcRipQZxyiDoE5p6/k
RGn75s6SSnYVAhrlCcwj2yGobg0HL3Lx15r2zjRp71axcPK91XjMmNCKbhLN+1mV
fR6yAoG3rSqZd2vONJud7RR70WyqdKpsjhrsP6tXDFkr4qSW69t7B/faA1GeQ/wq
YIOJZUVrxopEVmxQtRrwNfg7mnvWNkYaJoafjldSmVPOV1M8WF4+ds4NLWn1Ir8T
e8Xxck8Gq7MEqwzBkvzMlncawsntJqIJNCPsE/rhldvt9KZSZuYwToPS8TP6pyAo
RVqSNB2zvMvVnB9rm4A8lZnLBsCQPAcE7BUa8QIDAQABAoIBAAG/D0vbLgfAWklP
lSThxs9JmNSgvePK3OFAxw+iQpmWeN/vll1bDukILHONl/c0H9Ou3OvV7oxTjSzS
jhw2N3yNHC8Jh5WEhWx9vpj250fQ36cvGm1bG91QMlbtXxO0rfbrPVue5Oh+eUGu
1mWlNXQIf0L7mKGEYnSJ1yilG6cKWzMm6Qkr6KF5NsZatqMfnl+AbkLxq32fhvnU
59C045fpBSULsqUg9Hl/xXNj156LWa2G/Tw9yIvf2yIZpWKBaAcyi7+atuQcaMcG
fOwbfhU030fOIQUw9Uo3+baK3bTx0TWfbHt5yrqHZJIVmgFhG0ONxRUwAyXd5MM3
QS9P+FECgYEA2/D2l1HpIh+1zfCt790hL8RWv+hFmyGqsi14ucu0L7wf9rByQN8B
WKfmNOlG0lYQP/7xKY7kZtfA525CYDpWKCBzZa9RsabRbq2dFIw/pBRJ9mK4mXG0
SUtFmyijzxjeh9Bh2nCpfVM39Ku7ZXYWo2T6BQOjMYvzxXJOIdP82uUCgYEA1zTJ
HZG6VIDECYrNceecZYsb9qmJ6sscKa0J51bPARE9IFQPljoJQ90IZOKaQA7ICfju
RTqf3x0Ts7rX1Zes3dmxIIipInYBOaPrv+LcWECj5YsPIyoJaPusMNmJ46o19Bq4
eHhaJbPEnpxdvRSeOn+2V27FPvUzGOhRvg1HIx0CgYBmFfMvC0rtltBY9VSWmAn2
VOh7DMF6HudO6oI1otJQsb4YT4/Ignnqf4v/lSNVL7M9MQUY6AUloxEbmnbemVUy
LNXDJdwCXE6rU5QsXGiRrQUjgnDyb+9hcbmuKe/WiVGIsnUo4dAZpo27WBaUInqh
fpX5y9Vsguw0Ajk3xGCB7QKBgQDQhT/9m69Mo7vPdyObo4yhw0lkFmAhFY6DPzwi
YLWQ1jBBO9IigLdrfybcAcjuGqRvLTlJ8QTpPZZShs8NEbsY9w6udFxVnLuRKyiJ
s/pGtNNZ3gTb0KZvh7QPXSlDZDCFBsMJT6whbe8stFwLkofCLO70BsuuNg29q5VQ
rjLobQKBgFtbeAEm9mofoUHVHKDI40uMz+V6OD7zkng3JzAOr3hnN6oVDDxaGCvb
cKKITL+EFfJHhPUTntWAHmDeR1zzBDT9k5KjzihuUJPV/rMALen5PNgZHHiBR6N6
Kpjx7Q9GQHs1gnKVNqHaK3pPulJnW2QydtqXYKzfj2D38fuM+u4n
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1487021466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIQYTLldiN4WxcVFWT0k/i4WzANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIxMzIxMzEwNloXDTE5MDIx
MzIxMzEwNlowHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDpku8XijKb7NcnzkZ1pPAxNoVkFZZDMdz0
mEM2vYxFOMU/sVWtLeX79m0wZMmAYDE1tha0ZbI1BAoCwfZaYRnvEcNolHJHeQhc
WFHIVn4g/CME06W8CBLGbNAIOp4PjRtEltIETnJaKOfyQecKtb1GEu2LQQI910Ak
uHV0visfXO7HGYTK3Wf3mD2I/uO40jw6OtYNlhe7YwLkj+i4XdqQK1U+TyNJUAkW
9UasNUpwj2KTrpqpvD8341r1HoYHCrfefb49b8pLO5vYxD30u35U6Ntj1C7Xx+pl
n++gj+IVprmTZbF3xngsk8Yyn1D1pYNB6b4zhA2xhVK8SGS5i0LPAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFNDq0IkXT6UmSi/h6AXWBIvBYgSVMB8GA1UdIwQYMBaAFEAtLjIK
j0gGqF1WyuFfU9eKNrVkMA0GCSqGSIb3DQEBCwUAA4ICAQBrFTR83eYvsQGHN5ZO
O0FP8eojBCuCTysiPbIIV43rWSPwXuyCgkiFuw16QEmz/bmqfnfvwCsiaDnmiJJX
QqZ83wa/UEGev3gWVdaldQH1hu4tYABfOtAjB360flNvsMwWzh8wM9mSvxVdBP2I
TzmvT67bAMqYv6Fi+tppCLmE3KBaXQA9PTr8ZkLuJnkfwAb3mLghOZXP9byvw3oK
yZ0r3wXFfGeKjtALSF3ik3Zt3bwSInRQqdLQIrlaZcGNxgLkCzgNuy9nqUE7gFbo
e7gsw9NShhUGBvGlb6pRQe9z2r34XEMhJNit97ZOSekbGmH05LD016SMn9RzMqYn
tuThJgw7tKYqo6aPx/MMkdkhrovkxnPkdKmpQJ7WtE2PnfFdKLVQbS/2LEAtaMrB
l26X3vI6/DOmYVUCQSeJhp9TBpdqinoZOuha015tXa7gKEWY4BtZKpTQWomulWCZ
+GvJucsLpxHAyzdQuO1EmSCM7zyMj5muvC00BiCOZaey677J23y0OHHnfW6ZJ8Qk
hxc0umo+UN4FGjF/e/wKSQs+8zKHS/bLQ7/XmFT3HTDGvaxrFjn1iafqS7Y2basI
DBOwhpoKnljApChbJqwGPYtRT4BQbyVY4geRdjE0ZEYLdEvobTkqx1w9QW3DDooh
59D+A3MhyqdvrsgD8wThRSmCpw==
-----END CERTIFICATE-----
`)

func syslogdrainbinderCrtBytes() ([]byte, error) {
	return _syslogdrainbinderCrt, nil
}

func syslogdrainbinderCrt() (*asset, error) {
	bytes, err := syslogdrainbinderCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1487021466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDpku8XijKb7NcnzkZ1pPAxNoVkFZZD
Mdz0mEM2vYxFOMU/sVWtLeX79m0wZMmAYDE1tha0ZbI1BAoCwfZaYRnvEcNolHJH
eQhcWFHIVn4g/CME06W8CBLGbNAIOp4PjRtEltIETnJaKOfyQecKtb1GEu2LQQI9
10AkuHV0visfXO7HGYTK3Wf3mD2I/uO40jw6OtYNlhe7YwLkj+i4XdqQK1U+TyNJ
UAkW9UasNUpwj2KTrpqpvD8341r1HoYHCrfefb49b8pLO5vYxD30u35U6Ntj1C7X
x+pln++gj+IVprmTZbF3xngsk8Yyn1D1pYNB6b4zhA2xhVK8SGS5i0LPAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAsTeSi+Wi4cQml7iBRTW++KWHRtQAoZjCa5iX
yUXkB/Vx2Dk7VcU5d5XG4nItkJpBbjKFrnis7rx+F1R5WgG+EUnm876QAcbRRkO/
s30pR4HJw7cYoqdDwl0N8KiwZaSRwMp6KIDiUtOLnChHGP1kvkRMqdTM1erpzQpl
EEls6PI6O9nZ5JWmDL8txZPO7WD6nbPFqjHHYo/Vwdl4KxRtdxZ1KZVlc5Zayzyi
CAIbYiQfEahx2Td00BtBTd4oxuVOo+TNXDI5dNjflZEIuuV1L7SXsUgWZWwKtCgi
WfGlqRWX6HOqTp+NxYPMu/B+FrIYm5z8QyoUAYLz0iq73RFlXQ==
-----END CERTIFICATE REQUEST-----
`)

func syslogdrainbinderCsrBytes() ([]byte, error) {
	return _syslogdrainbinderCsr, nil
}

func syslogdrainbinderCsr() (*asset, error) {
	bytes, err := syslogdrainbinderCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1487021466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA6ZLvF4oym+zXJ85GdaTwMTaFZBWWQzHc9JhDNr2MRTjFP7FV
rS3l+/ZtMGTJgGAxNbYWtGWyNQQKAsH2WmEZ7xHDaJRyR3kIXFhRyFZ+IPwjBNOl
vAgSxmzQCDqeD40bRJbSBE5yWijn8kHnCrW9RhLti0ECPddAJLh1dL4rH1zuxxmE
yt1n95g9iP7juNI8OjrWDZYXu2MC5I/ouF3akCtVPk8jSVAJFvVGrDVKcI9ik66a
qbw/N+Na9R6GBwq33n2+PW/KSzub2MQ99Lt+VOjbY9Qu18fqZZ/voI/iFaa5k2Wx
d8Z4LJPGMp9Q9aWDQem+M4QNsYVSvEhkuYtCzwIDAQABAoIBAQDSmbRQgj/djW/1
qSyomH4lsWYWdsxUa9oxBDTeX4vhQi2/nxKEInVSeL+8ubNht9nG9xaDs4o5+RlZ
oS+SEClFALwzSF2+Ceg68ztSKoJxFUYx7O9rmc/r72KneMrZdL5YWrCkR2Md3fI8
4aUDaBhv3VMnkwcFYVaphVQKXgkdrYFVfV1ozkd5WVbv/55imbh3i/pUxVw4J58b
iK56VQz/DomUKwlNToEvrNt36tYEcdavdNnPMCOkRcpfYGnvwFXjJBxrXaTyHogB
k85bbZQeWHO3VCzJFlnxSPTYfKOhBWirHCcoiVJV97BYaopjKdiHZPBVEpFrnNPa
orNtr0mRAoGBAO5I3Be2WAtHd+jfHHnPqI8569MejqTK4wCTtdA21HYnkLJaBKd8
gdLbkihP0g8EP99C0p2veSQSP1lbwtobuIFO8w/kRccMpvhBCH9Zt3fgof1XUTT/
kixNleZKE79zwBvKGCbka5pLiAqRTRXvg/SeequOvFssiJhLFcnd9alJAoGBAPrw
a0Z4TuUpUr6VI5L+OL5EwusaUZv+k40JEioQlAxap/N3FX9dMF7434hyaWbPU3I0
0X+gai4Hna2khfq9imDu0VRszD41RdRg1vBN/xESsHQ2Mo8th5jPy1AXTycKM2l9
J6HseP58sB7ooaJCd02srU65VlcuSKd4EhUBW+NXAoGBAMCLlXV/vcNXe9hruRnh
KAacOig9r+wPmcDUmvzl4Wacb/r+bHZeUJVvIbp7TXUe7PHekEwlB9GTASeW02vl
LIEop5X20j+WxLEj89bcSzmOBbeuQAuAXMB57R/KSgzRXrHV6xA6UYy7bfGEGfMY
uNsI2H0aeK9/29ycB744IhMpAoGAN8+hDFtVsMIwFRM2hkrkc+z3LTL9U6SbTJLn
51MomlbPY+bocRtY1sajcMWBi8ww0wXMUoZrFzG6cBRXeB0P2d9Dz3MjOfK/RS0E
oQ233SQ6+p3TQOTvc51DqtyETjqGlL+xQOJHRtKUmUtEJ8KAplXxdcDi4yD4J8cc
vm8+8KECgYBpfZc0DCgDXtD3RulK4Du/CNo4hk1d2itbmZOXdDwNkqqvH457aVxs
BrQdNWIeJy7NXdOSvzmycZldM8Q6zAqRE4I9wZhet7DiNgnytxgv5vngmEPkc1/c
GFym5WJZ0LmHR41KOecAgqnuVvbwfgXIq/ESMa4KdhdRxryEO+d7lA==
-----END RSA PRIVATE KEY-----
`)

func syslogdrainbinderKeyBytes() ([]byte, error) {
	return _syslogdrainbinderKey, nil
}

func syslogdrainbinderKey() (*asset, error) {
	bytes, err := syslogdrainbinderKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1487021466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIQPgskL8K6r2ttRr5nVtN4QjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIxMzIxMzEwNVoXDTE5MDIx
MzIxMzEwNVowHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3IsgtmDUsoedP9YaU9gZp3RI6bQLoHWTW
ODrUZvBToIuoLwnq8rKMfhh9ehcV1zp48t+xZymZTCNuY8/wL0awuC3BF9/1kyO1
4pFc3xO5WtNDDauHo+e6g7FmPPBqrgkYHgY4SNyWyfmHID7dlgZf/IYfp+pAUmzV
+rN5jdoSs2TVk+wLps92kkMHJw/Y+PqGl7TAvXteHFjUbQgHybjEr1lMeK75f3da
FmcOgdEKuKrzrO17ROhga6BrTTmBSZXNs/dPJLUy/lPWItNIo8fO/+oz06ji9wY0
NQnetOPqAQ7z91QFB9HRDozmD53FB3JhMnF+1HqSYJrAy6sY7/mLAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFP/cccueb+eqG6g1bxSk6QFdDGLuMB8GA1UdIwQYMBaAFEAtLjIK
j0gGqF1WyuFfU9eKNrVkMA0GCSqGSIb3DQEBCwUAA4ICAQB3IwxeldUcTqLgmxEd
IYZINz3XYKEVg+dIjYmuZlgyGXVdtEoxJGTpxBHSVfJVLIZAOjqXazAB9KVKMR2O
+4uH02VU4xUYNkR8MRB26VPN40Y1OL7KTmLRvvJGwGC2lJAQgZjz9LyJQS40XU23
L65cmNembtVsMwoM9R7JSq1q7fo3IqUDixPKogW9/+e/mkCVOSUP/StfDRSfag7I
JEj6qXpeYuEKyNr6JfxGPmrCRV350g49FEuMuzjJm+XSYeP8MGdVzwWn8I89xswa
YVInh6+8CW7E9+EoDnHHyL3QpWuDsV94+ksaIXJ6ZUgPFtRa+MlKoEOML1fMHC1g
G/+2FTBITMMZsK0zMhj7IIa0Wesh5GgkGQPTKHaZ6ePIuwqj0hmSCYpL/W3i0xul
+akzJFEXQwpp8ZUY6r3ygRPs4WDMB/OKCwvcypJGRAH2KxIBQv2W2sEpKOpg6Ufe
RilZoISrodmo4TJfgyloKOM26iDoSVvINuy1Fvr21JAZy7HWFG8+lzjq/52O66bo
miZ8acywfUCwg2LnS95k3DM+nFBEFvtfy6QhBFdLrTXdbpCN7Mk9EhAvLCotE4t/
0PBpoRvUMR9MkH2vodqQ5KQgziNaMJvV2QRViqS9pNrgo1HKZ3bzWU89gR0oAfVd
33huIszPpmk5lGhRLQBavVje4w==
-----END CERTIFICATE-----
`)

func trafficcontrollerCrtBytes() ([]byte, error) {
	return _trafficcontrollerCrt, nil
}

func trafficcontrollerCrt() (*asset, error) {
	bytes, err := trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3IsgtmDUsoedP9YaU9gZp3RI6bQLo
HWTWODrUZvBToIuoLwnq8rKMfhh9ehcV1zp48t+xZymZTCNuY8/wL0awuC3BF9/1
kyO14pFc3xO5WtNDDauHo+e6g7FmPPBqrgkYHgY4SNyWyfmHID7dlgZf/IYfp+pA
UmzV+rN5jdoSs2TVk+wLps92kkMHJw/Y+PqGl7TAvXteHFjUbQgHybjEr1lMeK75
f3daFmcOgdEKuKrzrO17ROhga6BrTTmBSZXNs/dPJLUy/lPWItNIo8fO/+oz06ji
9wY0NQnetOPqAQ7z91QFB9HRDozmD53FB3JhMnF+1HqSYJrAy6sY7/mLAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEApnUx4FBu106ylyIOGmO+cEZKSKazyOO/hIqe
QPIGGWIlh3Ha0mNS7VvMKPdOdmxj2S4OnsYhbFEk8tTGhD/7+urVu9siTevm1TFO
+X8wo8UxQGWHqbc/qAUJV0p/yHXbq5NUFES7Ecai7C0sa+w70u0kCKpLvb+Tc2Z1
FoMBO/xR/8WAYx6aFSDNUbv3CW4xQLzZasWenYB7jGcrzsMDM/Vy96ploqZ9efTP
iuT5q174dMvV1rgwdPQa3IwQoUN+mbU+lN9EkgnKZwSPU1dWaeD+5uS7wtgTNSXz
f6TxhGdVl7RyVWCdPWPsU1JqJPwCwckQfmmPhDtr+ebfHm4X3A==
-----END CERTIFICATE REQUEST-----
`)

func trafficcontrollerCsrBytes() ([]byte, error) {
	return _trafficcontrollerCsr, nil
}

func trafficcontrollerCsr() (*asset, error) {
	bytes, err := trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAtyLILZg1LKHnT/WGlPYGad0SOm0C6B1k1jg61GbwU6CLqC8J
6vKyjH4YfXoXFdc6ePLfsWcpmUwjbmPP8C9GsLgtwRff9ZMjteKRXN8TuVrTQw2r
h6PnuoOxZjzwaq4JGB4GOEjclsn5hyA+3ZYGX/yGH6fqQFJs1fqzeY3aErNk1ZPs
C6bPdpJDBycP2Pj6hpe0wL17XhxY1G0IB8m4xK9ZTHiu+X93WhZnDoHRCriq86zt
e0ToYGuga005gUmVzbP3TyS1Mv5T1iLTSKPHzv/qM9Oo4vcGNDUJ3rTj6gEO8/dU
BQfR0Q6M5g+dxQdyYTJxftR6kmCawMurGO/5iwIDAQABAoIBAGXZkjrJS8lmwZ5W
jmKJ8UcvC9QyjEtLDamV3CIEnePkhccjYgCouWQpPLWMEQq0iHB7oqynExuOnKXo
HN0XbdkalVeuT3/kNRgSyYU9C1sqiBPipmLpZRb15tNVUOADqksfZ5Yl74htC7l6
1Xum1CTN7EnuuPjM3nqi0u3nVkDPU1umFiLma7TVcrF8f/hG3nUSf665jXQUdupE
e9nRm9d94s9u+UawOeHMzfvnkyl/dX3FyTF1s9JQNYZEx/Y6ehr95ws8gxDKSkDE
6XRRYkcruy4DDkwOKnhRXRYmwAk3DrtPDTqRvkbblvQ7bd9HuEqzO5Cp5DCrc+TI
unuSawECgYEA4WwiNQ5A7yyTmQRZXihnVfHmxUF03yipMFwfs11UMSYWSjbVm5k/
lPc/pwxLxsb33gNfbhoQTxqp+Mp8lSqr0YM5SqnEF4D9lZSqtkoAKhNfoKXYIQao
LeLeEnPNl8J9hoLwn80cQMgVeZCh/WOLGHtfhaWj+cWsvM8qxuE7v+0CgYEAz/o8
GOvkFn07S8nVNpnR/SoJWDnheQz61cSHDPrUAEA+S+aJneZdGVNIl32tR/QOzII0
RpPIrXHH5JrJWYdfK03oHhW7UWijR0fhdAYXqFlO6IC78zBkfQUtAtPWu/jTmoSY
gydLlrS7SEP+Iad1cV42q4pCyW9RZAK73h5wwFcCgYEAlKkPVhX0VMb8/6iSlznm
DBPfsK6eOJ1EFpRqg4tE/rSzdnX7IQZLnB4CaFP/lTOaO1vWD3I41zIqbdx7lJPz
g9QacFbM7wMuOPs2KclbmmP0aKl2gzE0sC4xbdHZAABPb+nibkCCJWbOYsEzUzvW
e2rBcA3wucPXSx0EhOv8z3ECgYADezPQUvqBad05OoqoHFEIhNCdOnLMvOvh8iU0
kWpFCs5AJP6+tuFuEBfR+VeSMcKhp7hKSiT8yj/HUtP1/K8aIXa2MjTteuvowIpE
j+mLdts8RxNeUbwM365OMs+QW+zm1DtdTqYUQrgz0HeLhqsPl70gh/LwPj3Fh8ov
QKEwhwKBgEk16ZfZB5UXgjIsSNDt5HleIhtck2faqy6qclGN4C7hGRUBu4O0rLfT
6KPdF4vHLW/mAAZqp1ZRliIoPu4upLeoA4pxGVGmdAjI+SE6oK0YsLTNp0183Lut
BbNjWxwJwoqkTwqCQ83ZKsg+SyRQq0ZfXWNn3czhbAp4PXppGFm9
-----END RSA PRIVATE KEY-----
`)

func trafficcontrollerKeyBytes() ([]byte, error) {
	return _trafficcontrollerKey, nil
}

func trafficcontrollerKey() (*asset, error) {
	bytes, err := trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1487021465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doppler.crt":           dopplerCrt,
	"doppler.csr":           dopplerCsr,
	"doppler.key":           dopplerKey,
	"loggregator-ca.crl":    loggregatorCaCrl,
	"loggregator-ca.crt":    loggregatorCaCrt,
	"loggregator-ca.key":    loggregatorCaKey,
	"metron.crt":            metronCrt,
	"metron.csr":            metronCsr,
	"metron.key":            metronKey,
	"syslogdrainbinder.crt": syslogdrainbinderCrt,
	"syslogdrainbinder.csr": syslogdrainbinderCsr,
	"syslogdrainbinder.key": syslogdrainbinderKey,
	"trafficcontroller.crt": trafficcontrollerCrt,
	"trafficcontroller.csr": trafficcontrollerCsr,
	"trafficcontroller.key": trafficcontrollerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doppler.crt":           {dopplerCrt, map[string]*bintree{}},
	"doppler.csr":           {dopplerCsr, map[string]*bintree{}},
	"doppler.key":           {dopplerKey, map[string]*bintree{}},
	"loggregator-ca.crl":    {loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt":    {loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key":    {loggregatorCaKey, map[string]*bintree{}},
	"metron.crt":            {metronCrt, map[string]*bintree{}},
	"metron.csr":            {metronCsr, map[string]*bintree{}},
	"metron.key":            {metronKey, map[string]*bintree{}},
	"syslogdrainbinder.crt": {syslogdrainbinderCrt, map[string]*bintree{}},
	"syslogdrainbinder.csr": {syslogdrainbinderCsr, map[string]*bintree{}},
	"syslogdrainbinder.key": {syslogdrainbinderKey, map[string]*bintree{}},
	"trafficcontroller.crt": {trafficcontrollerCrt, map[string]*bintree{}},
	"trafficcontroller.csr": {trafficcontrollerCsr, map[string]*bintree{}},
	"trafficcontroller.key": {trafficcontrollerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
